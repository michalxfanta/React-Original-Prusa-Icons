{"version":3,"sources":["lib/icons/PreheatIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["viewBox","PreheatIcon","props","useState","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherDuoColor","theme","withBackground","width","height","withPadding","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","ORANGE","TRANSPARENT","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","CUSTOM","WHITE","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor"],"mappings":"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","file":"static/js/68.f58c8f6d.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 800.05\r\n\r\nconst PreheatIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M302.7 611.01c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.17,-15.71 17.75,-31.43 17.75,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.26,102.4l45.62 -44.1 -0.5 0zm288.43 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.73,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0zm-145.99 0c-40.05,-39.54 -45.12,-62.86 -10.14,-107.97 12.16,-15.71 17.74,-31.43 17.74,-46.63 0,-31.94 -23.32,-63.37 -53.74,-99.87l-48.15 45.62c45.62,53.23 41.57,58.8 8.62,105.44 -10.64,15.21 -14.7,29.91 -14.7,45.12 0,38.53 28.89,75.02 55.25,102.4l45.63 -44.1 -0.51 0z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M566.18 32l0 124.4 -108.1 140.72 -89.37 0 -108.08 -140.72 0 -124.4 67.62 0 0 101.45 73.08 96.03 23.55 0 73.67 -96.03 0 -101.45 67.64 0zm-421.64 665.59l510.97 0 0 70.46 -510.97 0 0 -70.46z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PreheatIcon\r\n\r\nPreheatIcon.defaultProps = {\r\n    name: 'Preheat icon',\r\n    componentName: 'PreheatIcon',\r\n    description: 'Preheating nozzle and heated bed.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.TRANSPARENT,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}\r\n\r\n","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}