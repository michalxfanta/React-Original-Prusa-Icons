{"version":3,"sources":["lib/icons/PlusSignIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["viewBox","PlusSignIcon","props","useState","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherDuoColor","theme","withBackground","withPadding","width","height","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","SL1","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","ORANGE","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor"],"mappings":"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","file":"static/js/67.ceec6daa.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 4000\r\n\r\nconst PlusSignIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M2717.66 2118.9L2118.9 2118.9 2118.9 2717.66 1880.02 2717.66 1880.02 2118.9 1281.26 2118.9 1281.26 1880.02 1880.02 1880.02 1880.02 1281.26 2118.9 1281.26 2118.9 1880.02 2717.66 1880.02z\" />\r\n                <path fill={primaryColor?.toString()} d=\"M2000 562.5c-793.48,0 -1437.5,642.98 -1437.5,1437.5 0,793.48 642.98,1437.5 1437.5,1437.5 793.48,0 1437.5,-642.98 1437.5,-1437.5 0,-793.48 -642.98,-1437.5 -1437.5,-1437.5zm0 239.92c659.82,0 1197.54,537.76 1197.54,1197.54 0,659.82 -537.76,1197.54 -1197.54,1197.54 -659.82,0 -1197.54,-537.76 -1197.54,-1197.54 0,-659.82 537.76,-1197.54 1197.54,-1197.54z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default PlusSignIcon\r\n\r\nPlusSignIcon.defaultProps = {\r\n    name: 'Plus Sign Icon',\r\n    componentName: 'PlusSignIcon',\r\n    description: 'Plus sign icon for increasing numeric value.',\r\n    tags: [Tag.ICONS, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}