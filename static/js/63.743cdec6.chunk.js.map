{"version":3,"sources":["lib/icons/ParentFolderIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["viewBox","ParentFolderIcon","props","useState","primaryColor","setPrimaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherMonoColor","theme","withBackground","withPadding","width","height","backgroundRounded","backgroundRadius","fill","toString","d","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","SL1","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","fillRule","clipRule","imageRendering","shapeRendering","textRendering","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor","ORANGE","ThemeSwitcherDuoColor","setSecondaryColor"],"mappings":"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","file":"static/js/63.743cdec6.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherMonoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3997.6\r\n\r\nconst ParentFolderIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherMonoColor(props.theme, setPrimaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={primaryColor?.toString()} d=\"M3883.17 3230.3L2447.49 3230.3 2447.49 1794.6 3344.79 1794.6 1729.62 0 114.45 1794.6 1011.79 1794.6 1011.79 3997.6 3883.17 3997.6z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ParentFolderIcon\r\n\r\nParentFolderIcon.defaultProps = {\r\n    name: 'Parent folder icon',\r\n    componentName: 'ParentFolderIcon',\r\n    description: 'Universal Parent folder icon for all types of printers.',\r\n    tags: [Tag.ICONS, Tag.MINI, Tag.SL1],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}