{"version":3,"sources":["lib/icons/ZaxisIcon.tsx","lib/helpers/scale.tsx","lib/helpers/svg.tsx","lib/helpers/themeSwitcher.ts"],"names":["viewBox","ZaxisIcon","props","useState","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","backgroundColor","setBackgroundColor","useEffect","ThemeSwitcherDuoColor","theme","withBackground","withPadding","width","height","backgroundRounded","backgroundRadius","fill","toString","d","fillRule","defaultProps","name","componentName","description","tags","Tag","ICONS","MINI","folder","Folder","Theme","LIGHT","Color","DARK_GRAY","ORANGE","WHITE","DefaultRadiusRatio","Scale","padding","Math","round","DefaultPaddingRatio","transform","abs","rx","ry","background","children","Svg","xmlns","clipRule","imageRendering","shapeRendering","textRendering","ThemeSwitcherMonoColor","CUSTOM","DARK","GRAY","BLACK","GRAYSCALE","MONOCHROME","ThemeSwitcherMonoInverseColor"],"mappings":"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","file":"static/js/100.887043a8.chunk.js","sourcesContent":["import { Color, DefaultRadiusRatio, Folder, Tag, Theme } from '../config'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport IconDetail from '../../interfaces/Icon'\r\nimport { Scale } from '../helpers/scale'\r\nimport { Svg } from '../helpers/svg'\r\nimport { ThemeSwitcherDuoColor } from '../helpers/themeSwitcher'\r\n\r\ninterface IProps extends IconDetail {\r\n    primaryColor?: string | Color,\r\n    secondaryColor?: string | Color,\r\n}\r\n\r\nconst viewBox: number = 3996.8\r\n\r\nconst ZaxisIcon = (props: IProps) => {\r\n    const [primaryColor, setPrimaryColor] = useState<String | Color | undefined>(props.primaryColor)\r\n    const [secondaryColor, setSecondaryColor] = useState<String | Color | undefined>(props.secondaryColor)\r\n    const [backgroundColor, setBackgroundColor] = useState<String | Color | undefined>(props.backgroundColor)\r\n\r\n    useEffect(() => {\r\n        ThemeSwitcherDuoColor(props.theme, setPrimaryColor, setSecondaryColor, setBackgroundColor)\r\n    }, [props.theme, props.withBackground, props.withPadding]) // eslint-disable-line\r\n\r\n    return (\r\n        <Svg viewBox={viewBox} width={props.width} height={props.height} withPadding={props.withPadding}>\r\n            <Scale viewBox={viewBox} backgroundColor={backgroundColor} withPadding={props.withPadding} withBackground={props.withBackground} backgroundRounded={props.backgroundRounded} backgroundRadius={props.backgroundRadius} width={props.width} height={props.height}>\r\n                <path fill={secondaryColor?.toString()} d=\"M757.89 1504.68L1050.28 1212.13 1998.4 2177.34 2945.74 1212.13 3238.11 1504.68 1998.4 2762.23z\" />\r\n                <path fill={primaryColor?.toString()} fillRule=\"nonzero\" d=\"M-0 3443.73l3996.8 0 0 553.08 -3996.8 0 0 -553.08zm1492.11 -2259.73l701.78 -848.54 -682.55 0 0 -211.81 960.75 0 0 181.91 -679.08 848.72 684.31 0 0 211.81 -985.21 0 0 -182.09z\" />\r\n            </Scale>\r\n        </Svg>\r\n    )\r\n}\r\n\r\nexport default ZaxisIcon\r\n\r\nZaxisIcon.defaultProps = {\r\n    name: 'Z axis icon',\r\n    componentName: 'ZaxisIcon',\r\n    description: 'Z axis icon for FDM printers.',\r\n    tags: [Tag.ICONS, Tag.MINI],\r\n\r\n    folder: Folder.ICONS,\r\n\r\n    width: 48,\r\n    height: 48,\r\n\r\n    theme: Theme.LIGHT,\r\n\r\n    primaryColor: Color.DARK_GRAY,\r\n    secondaryColor: Color.ORANGE,\r\n\r\n    withBackground: true,\r\n    backgroundColor: Color.WHITE,\r\n    backgroundRounded: true,\r\n    backgroundRadius: (viewBox * DefaultRadiusRatio),\r\n}","import { Color, DefaultPaddingRatio } from 'src/lib/config'\r\n\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    withBackground: boolean | undefined,\r\n    backgroundColor?: String | Color | undefined,\r\n    backgroundRounded?: boolean,\r\n    backgroundRadius?: number,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Scale: React.FC<IProps> = (props) => {\r\n    const padding: number = Math.round((props.viewBox - (props.viewBox * (1 - DefaultPaddingRatio))) / 2)\r\n    const background = () => {\r\n        if (props.withBackground) {\r\n            return <rect\r\n                transform={props.withPadding ? `translate(${-2 * padding}, ${-2 * padding})` : ''}\r\n                fill={props.backgroundColor?.toString()}\r\n                width={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                height={props.viewBox * (1 + (props.withPadding ? Math.abs(DefaultPaddingRatio) : 0))}\r\n                rx={props.backgroundRounded ? props.backgroundRadius : 0}\r\n                ry={props.backgroundRounded ? props.backgroundRadius : 0}\r\n            />\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {background()}\r\n            {\r\n                props.withPadding ?\r\n                    <g transform={`translate(${-padding}, ${-padding})`}>\r\n                        {props.children}\r\n                    </g>\r\n                    :\r\n                    <>\r\n                        {props.children}\r\n                    </>\r\n            }\r\n        </>\r\n\r\n    )\r\n}","import { DefaultPaddingRatio } from '../../lib/config'\r\nimport React from 'react'\r\n\r\ninterface IProps {\r\n    withPadding: boolean | undefined,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    viewBox: number\r\n}\r\n\r\nexport const Svg: React.FC<IProps> = (props) => {\r\n\r\n    const viewBox = () => {\r\n        if (props.withPadding) {\r\n            return `${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${0 - (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))} ${props.viewBox + (props.viewBox * Math.abs(DefaultPaddingRatio))}`\r\n        }\r\n        else {\r\n            return `${0} ${0} ${props.viewBox} ${props.viewBox}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height} fillRule=\"evenodd\" clipRule=\"evenodd\" imageRendering=\"optimizeQuality\" shapeRendering=\"geometricPrecision\" textRendering=\"geometricPrecision\" viewBox={viewBox()}>\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}","import { Color, Theme } from '../../lib/config'\r\n\r\nexport const ThemeSwitcherMonoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherMonoInverseColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}\r\n\r\nexport const ThemeSwitcherDuoColor = (\r\n    theme: Theme | undefined,\r\n    setPrimaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setSecondaryColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>,\r\n    setBackgroundColor: React.Dispatch<React.SetStateAction<String | Color | undefined>>) => {\r\n    switch (theme) {\r\n        case Theme.CUSTOM:\r\n            break\r\n        case Theme.LIGHT:\r\n            setPrimaryColor(Color.DARK_GRAY)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.DARK:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.ORANGE)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.WHITE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n        case Theme.BLACK:\r\n            setPrimaryColor(Color.BLACK)\r\n            setSecondaryColor(Color.BLACK)\r\n            setBackgroundColor(Color.WHITE)\r\n            break\r\n        case Theme.GRAYSCALE:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.DARK_GRAY)\r\n            setBackgroundColor(Color.GRAY)\r\n            break\r\n        case Theme.MONOCHROME:\r\n            setPrimaryColor(Color.WHITE)\r\n            setSecondaryColor(Color.WHITE)\r\n            setBackgroundColor(Color.BLACK)\r\n            break\r\n    }\r\n}"],"sourceRoot":""}